export function createLogger(options: Object, logMessage: Function, reconfigureOperation: Function): Object;
export function isValidLogTag(logTag: any): boolean;
export function logTagToLevel(logTag: any): any;
export namespace LOG_LEVEL_TAGS {
    import OFF = LOG_LEVEL_OFF.tag;
    export { OFF };
    import ERROR = LOG_LEVEL_ERROR.tag;
    export { ERROR };
    import WARN = LOG_LEVEL_WARN.tag;
    export { WARN };
    import INFO = LOG_LEVEL_INFO.tag;
    export { INFO };
    import DEBUG = LOG_LEVEL_DEBUG.tag;
    export { DEBUG };
    import TRACE = LOG_LEVEL_TRACE.tag;
    export { TRACE };
}
declare namespace LOG_LEVEL_OFF {
    let tag: string;
    let level: number;
}
declare namespace LOG_LEVEL_ERROR {
    let tag_1: string;
    export { tag_1 as tag };
    let level_1: number;
    export { level_1 as level };
}
declare namespace LOG_LEVEL_WARN {
    let tag_2: string;
    export { tag_2 as tag };
    let level_2: number;
    export { level_2 as level };
}
declare namespace LOG_LEVEL_INFO {
    let tag_3: string;
    export { tag_3 as tag };
    let level_3: number;
    export { level_3 as level };
}
declare namespace LOG_LEVEL_DEBUG {
    let tag_4: string;
    export { tag_4 as tag };
    let level_4: number;
    export { level_4 as level };
}
declare namespace LOG_LEVEL_TRACE {
    let tag_5: string;
    export { tag_5 as tag };
    let level_5: number;
    export { level_5 as level };
}
export {};
